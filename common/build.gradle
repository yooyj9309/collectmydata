plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

group 'com.banksalad.collectmydata'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/banksalad/**")
        credentials {
            username = System.getenv("GH_USERNAME")
            password = System.getenv("GH_DAAS_PACKAGES_TOKEN")
        }
    }
}

ext {
    idlVersion = "20210122.7e9d732.RELEASE"

    springBootVersion = "2.4.1"
    springCloudVersion = "2020.0.0"
    grpcVersion = "1.30.2"
    apacheCommonsVersion = "3.10"
    slf4jVersion = "1.7.30"
    logbackVersion = "1.2.3"
    lombokVersion = "1.18.12"

    jacksonVersion = '2.11.0'
    jsonPathVersion = '2.4.0'
    camelVersion = '3.2.0'
    slf4jVersion = '1.7.30'
    logbackVersion = '1.2.3'
    reactorVersion = '3.4.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


dependencies {
    // idl
    implementation("com.banksalad:idl:${idlVersion}")

    // grpc
    implementation("io.grpc:grpc-context:${grpcVersion}")
    implementation("io.grpc:grpc-api:${grpcVersion}")
    implementation("io.grpc:grpc-protobuf:${grpcVersion}")

    // spring
    implementation("org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}")

    // Jackson
    implementation("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
    implementation("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    implementation("com.jayway.jsonpath:json-path:${jsonPathVersion}")

    // camel-jslt
    implementation("org.apache.camel:camel-jslt:${camelVersion}")

    // apache commons
    implementation("org.apache.commons:commons-lang3:${apacheCommonsVersion}")

    // log
    implementation("org.slf4j:slf4j-api:${slf4jVersion}")
    implementation("org.slf4j:jcl-over-slf4j:${slf4jVersion}")
    implementation("ch.qos.logback:logback-classic:${logbackVersion}")

    // logback json
    implementation("ch.qos.logback.contrib:logback-json-classic:0.1.5")
    implementation("ch.qos.logback.contrib:logback-jackson:0.1.5")

    // lombok
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    // valid
    implementation("org.springframework.boot:spring-boot-starter-validation:${springBootVersion}")

    // test
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }

    testImplementation("org.springframework.cloud:spring-cloud-starter-contract-stub-runner")

    testImplementation("commons-io:commons-io:2.6")
    testImplementation("com.h2database:h2")
    testImplementation("org.mockito:mockito-inline:3.1.0")
    testImplementation("com.google.protobuf:protobuf-java-util:3.11.0")

    testImplementation("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    testImplementation("io.projectreactor:reactor-test:3.4.2")
}
